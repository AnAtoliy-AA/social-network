{"version":3,"sources":["components/common/FormsControls/FormsControl.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","undefined","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","showError","className","styles","formControl","TextArea","props","input","restProps","child","Element","hasError","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","name","placeholder","component","validate","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAAAC,GAEpB,OAAQA,OAASC,EAAY,qBAGpBC,EAAmB,SAACC,GAAD,OAAe,SAAAH,GAE3C,GAAIA,GAASA,EAAMI,OAASD,EACxB,MAAM,iBAAN,OAAwBA,EAAxB,e,oJCLFE,EAAc,SAAC,GAA2C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACtCC,EAAYH,GAAWC,EAC7B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAYE,IAAOJ,MAAQ,KACnE,6BACKC,GAEJC,GAAa,8BAAOF,KAKpBM,EAAW,SAACC,GAAW,IACxBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADU,YACcH,EADd,2BAE/B,OAAO,kBAACV,EAAgBU,EAAjB,IAAyB,8CAAcC,EAAWC,MAQhDE,EAAU,SAAAA,GAAO,OAAI,YAAgC,IAA7BH,EAA4B,EAA5BA,MAAOV,EAAqB,EAArBA,KAASS,EAAY,gCACvDK,EAAWd,EAAKC,SAAWD,EAAKE,MACtC,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOO,EAAWR,IAAOJ,MAAQ,KAClE,kBAAC,EAAD,iBAAaQ,EAAWD,IACtBK,GAAY,kCAAQd,EAAKE,MAAb,S,iCC9B1B,wGAYML,EAAYD,YAFC,IAGbmB,EAAQF,YAAQ,SAuChBG,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EArCL,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAajB,EAAW,EAAXA,MAC7B,OACI,0BAAMkB,SAAUD,GACZ,6BACI,kBAAC,IAAD,CACIE,KAAM,QACNC,YAAa,QACbC,UAAWR,EACXS,SAAU,CAAC/B,IAAUI,MAG7B,6BACI,kBAAC,IAAD,CACIwB,KAAM,WACNC,YAAa,WACbG,KAAM,WACNF,UAAWR,EACXS,SAAU,CAAC/B,IAAUI,MAG7B,6BACI,kBAAC,IAAD,CACIwB,KAAM,aACNE,UAAW,QACXE,KAAM,cAGbvB,GAAS,yBAAKG,UAAWC,IAAOoB,kBAC5BxB,GAEL,6BACI,8CA6BDyB,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAIiB,CAAEE,WAA3BJ,EArBD,SAAC,GAAoB,IAAnBI,EAAkB,EAAlBA,MAIZ,OAJ8B,EAAZF,OAKP,kBAAC,IAAD,CAAUG,GAAI,YAIrB,6BACI,qCACA,kBAAChB,EAAD,CAAgBI,SAVP,SAACa,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.1d6960f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3VMN9\",\"error\":\"FormsControl_error__3SyUw\",\"formSummaryError\":\"FormsControl_formSummaryError__202qp\"};","export const required = value => {\r\n\r\n    return (value) ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nconst FormControl = ({meta: { touched, error }, children }) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {showError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    );\r\n};","import { Field, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nimport { Element } from '../common/FormsControls/FormsControls';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../common/FormsControls/FormsControl.module.css';\r\n\r\nconst MAX_LENGTH = 50;\r\n\r\nconst maxLength = maxLengthCreator(MAX_LENGTH);\r\nconst Input = Element(\"input\");\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'email'}\r\n                    placeholder={'Email'}\r\n                    component={Input}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={'password'}\r\n                    placeholder={'Password'}\r\n                    type={'password'}\r\n                    component={Input}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    name={'rememberMe'}\r\n                    component={\"input\"}\r\n                    type={'checkbox'}\r\n                />\r\n            </div>\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = ({login,isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}