{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","redux/app-reducer.ts","redux/navbar-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","redux/auth-reducer.ts","assets/images/Spinner-1s-300px.svg","components/common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profile-reducer.js","api/api.js","redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","props","className","classes","header","src","alt","loginBlock","isAuth","login","onClick","logout","to","HeaderContainer","this","React","Component","connect","state","auth","Navbar","styles","nav","item","activeClassName","activeLink","href","ACTION_CONST","initialState","initialized","appReducer","action","type","navBarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","navBarPage","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","Preloader","ProfileContainer","lazy","DialogsContainer","UsersContainer","LoginPage","App","initializeApp","path","render","AppContainer","withRouter","dispatch","getAuthUserData","then","MainApp","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","userId","email","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","id","password","rememberMe","messages","length","stopSubmit","_error","style","backgroundColor","preloader","posts","likesCount","profile","status","addPostActionCreator","newPostText","setStatus","getUserProfile","usersAPI","getProfile","getUserStatus","profileAPI","getStatus","updateStatus","savePhoto","file","photos","newPost","filter","p","postId","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","warn","put","photoFile","formData","FormData","append","dialogs","name","addMessageActionCreator","newMessageBody","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","requestUsers","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.e389f0be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Pdg6\",\"item\":\"Navbar_item__C9tz8\",\"activeLink\":\"Navbar_activeLink__14sy4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src=\"https://i.pinimg.com/736x/5a/02/5e/5a025e222970a3dd2c3706bde935ae15.jpg\"\r\n        alt=\"logo\"></img>\r\n\r\n      <div className={classes.loginBlock}>\r\n        {props.isAuth\r\n          ? <div>\r\n            {props.login} - \r\n            <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n          : <NavLink to={'login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import Header from './Header';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import { NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/profile\" activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to=\"/users\" activeClassName={styles.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <a href=\"/news\">News</a>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <a href=\"music\">Music</a>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <a href=\"/settings\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst ACTION_CONST = {\r\n    SET_INITIALIZED_SUCCESS: 'APP_REDUCER_SET_INITIALIZED_SUCCESS',\r\n}\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: { type: any; }): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_CONST.SET_INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof ACTION_CONST.SET_INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = ():InitializedSuccessActionType => ({ type: ACTION_CONST.SET_INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default navBarReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\n\r\nimport appReducer from \"./app-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport navBarReducer from \"./navbar-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navBarPage: navBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancer(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n           <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}","import './App.css';\r\n\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport HeaderContainer from './components/Header/HeaderContainer'; import { compose } from 'redux';\r\nimport Navbar from './components/Navbar/Navbar'; import { connect } from 'react-redux';\r\nimport Preloader from './components/common/Preloader/Preloader'; import { initializeApp } from './redux/app-reducer';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/redux-store';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper__content'>\r\n          <Route\r\n            path='/dialogs'\r\n            render={withSuspense(DialogsContainer)}\r\n          />\r\n          <Route\r\n            path='/profile/:userId?'\r\n            render={withSuspense(ProfileContainer)}\r\n          />\r\n          <Route\r\n            path='/users'\r\n            render={withSuspense(UsersContainer)}\r\n          />\r\n          <Route\r\n            path='/login'\r\n            render={withSuspense(LoginPage)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst MainApp = (props) => {\r\n\r\n  return <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default MainApp;\r\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <MainApp />\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { setAuthUserData } from './auth-reducer';\r\nimport { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ACTION_CONST = {\r\n    SET_USER_DATA: 'AUTH_REDUCER_SET_USER_DATA',\r\n}\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean \r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state:InitialStateType = initialState, action: { type: any; payload: any; }):InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_CONST.SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype setAuthUserDataActionPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean \r\n}\r\n\r\ntype setAuthUserDataActionType = {\r\n    type: typeof ACTION_CONST.SET_USER_DATA, \r\n    payload: setAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number|null, email: string|null, login: string|null, isAuth: boolean):setAuthUserDataActionType => ({\r\n    type: ACTION_CONST.SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean | undefined) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/Spinner-1s-300px.5f11ae0b.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/images/Spinner-1s-300px.svg';\r\n\r\nlet Preloader = (props) => {\r\n   return <div style={{ backgroundColor: 'white' }}>\r\n      <img src={preloader} alt='preloader' />\r\n   </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__19Zig\",\"loginBlock\":\"Header_loginBlock__JrsOx\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ACTION_CONST = {\r\n    ADD_POST: 'PROFILE_REDUCER_ADD-POST',\r\n    SET_USER_PROFILE: 'PROFILE_REDUCER_SET_USER_PROFILE',\r\n    SET_STATUS: 'PROFILE_REDUCER_SET_STATUS',\r\n    SAVE_PHOTO_SUCCESS: 'PROFILE_REDUCER_SAVE_PHOTO_SUCCESS',\r\n    DELETE_POST: 'PROFILE_REDUCER_DELETE_POST',\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'hi', likesCount: 4 },\r\n        { id: 2, message: 'hi how are you', likesCount: 6 },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_CONST.SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case ACTION_CONST.ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case ACTION_CONST.SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case ACTION_CONST.DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        case ACTION_CONST.SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ACTION_CONST.ADD_POST, newPostText });\r\nexport const setUserProfile = (profile) => ({ type: ACTION_CONST.SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: ACTION_CONST.SET_STATUS, status });\r\nexport const deletePost = (postId) => ({ type: ACTION_CONST.DELETE_POST, postId });\r\nexport const savePhotoSuccess = (photos) => ({ type: ACTION_CONST.SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'df684d2d-a395-4ef3-adc5-f66ca11a42e2'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n","const ACTION_CONST = {\r\n    ADD_MESSAGE: 'DIALOGS_REDUCER_ADD-MESSAGE',\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'SASHA' },\r\n        { id: 2, name: 'MASHA' },\r\n        { id: 3, name: 'PASHA' },\r\n        { id: 4, name: 'KASHA' },\r\n        { id: 5, name: 'PROSTOKVASHA' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'hi' },\r\n        { id: 2, message: 'by' },\r\n        { id: 3, message: 'fdf' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_CONST.ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: action.newMessageBody }]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return { type: ACTION_CONST.ADD_MESSAGE ,newMessageBody};\r\n}\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst ACTION_CONST = {\r\n    FOLLOW: 'USERS_REDUCER_FOLLOW',\r\n    UNFOLLOW: 'USERS_REDUCER_UNFOLLOW',\r\n    SET_USERS: 'USERS_REDUCER_SET_USERS',\r\n    SET_CURRENT_PAGE: 'USERS_REDUCER_SET_CURRENT_PAGE',\r\n    SET_TOTAL_PAGES_COUNT: 'USERS_REDUCER_SET_TOTAL_PAGES_COUNT',\r\n    TOGGLE_IS_FETCHING: 'USERS_REDUCER_TOGGLE_IS_FETCHING',\r\n    TOGGLE_IS_FOLLOWING_PROGRESS: 'USERS_REDUCER_TOGGLE_IS_FOLLOWING_PROGRESS',\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_CONST.FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId, 'id',{followed: true})\r\n            }\r\n        }\r\n        case ACTION_CONST.UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId, 'id',{followed: false})\r\n            }\r\n        }\r\n        case ACTION_CONST.SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case ACTION_CONST.SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case ACTION_CONST.SET_TOTAL_PAGES_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        }\r\n        case ACTION_CONST.TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case ACTION_CONST.TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: ACTION_CONST.FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: ACTION_CONST.UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: ACTION_CONST.SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: ACTION_CONST.SET_CURRENT_PAGE, currentPage: currentPage });\r\nexport const setUsersTotalCount = (totalCount) => ({ type: ACTION_CONST.SET_TOTAL_PAGES_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: ACTION_CONST.TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: ACTION_CONST.TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;"],"sourceRoot":""}