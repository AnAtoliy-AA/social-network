{"version":3,"sources":["components/common/FormsControls/FormsControl.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","undefined","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","showError","className","styles","formControl","TextArea","props","input","restProps","child","Element","hasError","DialogItem","path","id","dialog","to","name","Message","message","maxLength50","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.d972d81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3VMN9\",\"error\":\"FormsControl_error__3SyUw\",\"formSummaryError\":\"FormsControl_formSummaryError__202qp\"};","export const required = value => {\r\n\r\n    return (value) ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`;\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nconst FormControl = ({meta: { touched, error }, children }) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (showError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {showError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            { hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ibAw\",\"dialogsItems\":\"Dialogs_dialogsItems__3FZXl\",\"messages\":\"Dialogs_messages__1BDHd\"};","import { NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport { TextArea } from '../common/FormsControls/FormsControls';\r\nimport styles from './Dialogs.module.css';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem\r\n            name={dialog.name}\r\n            id={dialog.id}\r\n            key={dialog.id} />);\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message\r\n            message={m.message}\r\n            key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                    component={TextArea}\r\n                    validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button\r\n                >Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}